package prob23;

import java.util.ArrayList;

public class AscendingArrayOfNumbers {

	public ArrayList<Integer> result(ArrayList<Integer> arrayList) {

		ArrayList<ArrayList<Integer>> possibleSequences = new ArrayList<ArrayList<Integer>>();
		ArrayList<Integer> tempList = arrayList;
		int[] nrOfAppearences;

		while (tempList.size() > 0) {

			nrOfAppearences = countNrOfAppearencesFrom(tempList);

			possibleSequences.add(returnPossibleSequences(tempList,countNrOfAppearencesFrom(tempList)));
			
			tempList.remove(0);
		}

		return arrayList;
	}

	private int[] countNrOfAppearencesFrom(ArrayList<Integer> tempList) {

		int maxElement = tempList.get(0);

		for (Integer value : tempList)

			if (value > maxElement)

				maxElement = value;

		int[] appearances = new int[maxElement + 1];

		for (int i = 0; i < tempList.size(); i++)

			appearances[tempList.get(i)]++;

		return appearances;

	}
}