package prob14;

import java.util.ArrayList;

public class Coins {

	public ArrayList<Integer> returnAmmountOfCoins(ArrayList<Integer> ammountList) {

		for (int i = 0; i < ammountList.size()+1; i++) {
			
			if (ammountList.get(0) >= 0)

				ammountList.add(returnNeededAmmountOfCoins(ammountList.get(0)));

			ammountList.remove(0);

		}
		return ammountList;
	}

	private Integer returnNeededAmmountOfCoins(Integer ammount) {

		Integer[] coins = { 50, 25, 10, 3, 1 };
		int minAmmountPossibility = ammount / coins[4]; // - maximum possible
														// value

		for (int i = 0; i < coins.length; i++) {

			int nrOfCoinsNeeded = 0;
			int j = i;
			int value = ammount;

			while (j < 5) {

				nrOfCoinsNeeded += value / coins[j];

				value -= (value / coins[j]) * coins[j];

				j++;
			}

			if (nrOfCoinsNeeded > 0 && minAmmountPossibility > nrOfCoinsNeeded)

				minAmmountPossibility = nrOfCoinsNeeded;

		}

		return minAmmountPossibility;
	}

}
